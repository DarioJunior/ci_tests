name: ci-goland-workflow
on:
  pull_request:
    branches:
      - develop
jobs:
  check-application:
    ##strategy:
      ##matrix:
        ##go: ['1.14', '1.15']
    runs-on: ubuntu-latest
    permissions: read-all
    steps:
      # Pega os dados e baixa os arquivos para a VM
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - uses: actions/setup-go@v2
        with:
          go-versions: 1.16
          ##go-version: ${{ matrix.go }}
      - run: go test
      - run: go run math.go
      # ACTION TO CONFIG DOCKER
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      # ACTION TO GENERATE BUILDS
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and Push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: false
          tags: DarioJunior/ci_test:latest
          ##build-args: |
            ##arg1=value1
            ##arg2=value2